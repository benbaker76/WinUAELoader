<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="lblAbout.Text" xml:space="preserve">
    <value>WinUAE Loader [VERSION] - By Ben Baker

USAGE: WinUAELoader.exe [-mode [gamebase | whdload | sps | demobase | auto]] -rom "file"

This program is designed to run on Arcade cabinets :)

Many thanks to the GameBase Amiga (Belgarath / eLowar / KillerGorilla), DemoBase Amiga (Sjakie43) and WHDLoad (Bert Jahn) teams. Without their hard work this program would not be possible. Please support these projects! Also thanks to iano and wobbly for donating a WHDLoad key and DamageCase for help with some WinUAE stuff.

Amiga Forever!</value>
  </data>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAB0
        EQAAAk1TRnQBSQFMAgEBCQEAARwBAAEcAQABEAEAARABAAT/AQkBAAj/AUIBTQE2AQQGAAE2AQQCAAEo
        AwABQAMAATADAAEBAQABCAYAAQwYAAGAAgABgAMAAoABAAGAAwABgAEAAYABAAKAAgADwAEAAcAB3AHA
        AQAB8AHKAaYBAAEzBQABMwEAATMBAAEzAQACMwIAAxYBAAMcAQADIgEAAykBAANVAQADTQEAA0IBAAM5
        AQABgAF8Af8BAAJQAf8BAAGTAQAB1gEAAf8B7AHMAQABxgHWAe8BAAHWAucBAAGQAakBrQIAAf8BMwMA
        AWYDAAGZAwABzAIAATMDAAIzAgABMwFmAgABMwGZAgABMwHMAgABMwH/AgABZgMAAWYBMwIAAmYCAAFm
        AZkCAAFmAcwCAAFmAf8CAAGZAwABmQEzAgABmQFmAgACmQIAAZkBzAIAAZkB/wIAAcwDAAHMATMCAAHM
        AWYCAAHMAZkCAALMAgABzAH/AgAB/wFmAgAB/wGZAgAB/wHMAQABMwH/AgAB/wEAATMBAAEzAQABZgEA
        ATMBAAGZAQABMwEAAcwBAAEzAQAB/wEAAf8BMwIAAzMBAAIzAWYBAAIzAZkBAAIzAcwBAAIzAf8BAAEz
        AWYCAAEzAWYBMwEAATMCZgEAATMBZgGZAQABMwFmAcwBAAEzAWYB/wEAATMBmQIAATMBmQEzAQABMwGZ
        AWYBAAEzApkBAAEzAZkBzAEAATMBmQH/AQABMwHMAgABMwHMATMBAAEzAcwBZgEAATMBzAGZAQABMwLM
        AQABMwHMAf8BAAEzAf8BMwEAATMB/wFmAQABMwH/AZkBAAEzAf8BzAEAATMC/wEAAWYDAAFmAQABMwEA
        AWYBAAFmAQABZgEAAZkBAAFmAQABzAEAAWYBAAH/AQABZgEzAgABZgIzAQABZgEzAWYBAAFmATMBmQEA
        AWYBMwHMAQABZgEzAf8BAAJmAgACZgEzAQADZgEAAmYBmQEAAmYBzAEAAWYBmQIAAWYBmQEzAQABZgGZ
        AWYBAAFmApkBAAFmAZkBzAEAAWYBmQH/AQABZgHMAgABZgHMATMBAAFmAcwBmQEAAWYCzAEAAWYBzAH/
        AQABZgH/AgABZgH/ATMBAAFmAf8BmQEAAWYB/wHMAQABzAEAAf8BAAH/AQABzAEAApkCAAGZATMBmQEA
        AZkBAAGZAQABmQEAAcwBAAGZAwABmQIzAQABmQEAAWYBAAGZATMBzAEAAZkBAAH/AQABmQFmAgABmQFm
        ATMBAAGZATMBZgEAAZkBZgGZAQABmQFmAcwBAAGZATMB/wEAApkBMwEAApkBZgEAA5kBAAKZAcwBAAKZ
        Af8BAAGZAcwCAAGZAcwBMwEAAWYBzAFmAQABmQHMAZkBAAGZAswBAAGZAcwB/wEAAZkB/wIAAZkB/wEz
        AQABmQHMAWYBAAGZAf8BmQEAAZkB/wHMAQABmQL/AQABzAMAAZkBAAEzAQABzAEAAWYBAAHMAQABmQEA
        AcwBAAHMAQABmQEzAgABzAIzAQABzAEzAWYBAAHMATMBmQEAAcwBMwHMAQABzAEzAf8BAAHMAWYCAAHM
        AWYBMwEAAZkCZgEAAcwBZgGZAQABzAFmAcwBAAGZAWYB/wEAAcwBmQIAAcwBmQEzAQABzAGZAWYBAAHM
        ApkBAAHMAZkBzAEAAcwBmQH/AQACzAIAAswBMwEAAswBZgEAAswBmQEAA8wBAALMAf8BAAHMAf8CAAHM
        Af8BMwEAAZkB/wFmAQABzAH/AZkBAAHMAf8BzAEAAcwC/wEAAcwBAAEzAQAB/wEAAWYBAAH/AQABmQEA
        AcwBMwIAAf8CMwEAAf8BMwFmAQAB/wEzAZkBAAH/ATMBzAEAAf8BMwH/AQAB/wFmAgAB/wFmATMBAAHM
        AmYBAAH/AWYBmQEAAf8BZgHMAQABzAFmAf8BAAH/AZkCAAH/AZkBMwEAAf8BmQFmAQAB/wKZAQAB/wGZ
        AcwBAAH/AZkB/wEAAf8BzAIAAf8BzAEzAQAB/wHMAWYBAAH/AcwBmQEAAf8CzAEAAf8BzAH/AQAC/wEz
        AQABzAH/AWYBAAL/AZkBAAL/AcwBAAJmAf8BAAFmAf8BZgEAAWYC/wEAAf8CZgEAAf8BZgH/AQAC/wFm
        AQABIQEAAaUBAANfAQADdwEAA4YBAAOWAQADywEAA7IBAAPXAQAD3QEAA+MBAAPqAQAD8QEAA/gBAAHw
        AfsB/wEAAaQCoAEAA4ADAAH/AgAB/wMAAv8BAAH/AwAB/wEAAf8BAAL/AgAD/wEAAe8P7DAAAQcJ8gLv
        A/IB7DAAAQcC/wHzAf8C8wL/AfECVQHxAf8B8wHsMAABBwH/AQcB7wEHArwB8wHyAc8BcAH6AQcB/wHz
        AewwAAEHAf8D7wLxAfMBtAHHAc8BNQF5AfIB9AHsMAABBwH/AfIB/wPyAf8CrQHyAjIBBwHyAewwAAEH
        Af8B7QH/A+0E/wFTATIBkwH0AewwAAEHCv8B8QImAQcB7DAAAQcB/wHtAf8E7QH/AbwC/wImAQcB7DAA
        AQcB/wHyAf8E8gH/AfMC/wK9AfMB7DAAAQcB/wLvAf8G7wH/Ae8B8QH/AewwAAEHAf8CBwH/BgcB/wEH
        AfIB/wHsMAABBwPyAbwC8AG8AfABvAHwAbwB8AG8AfAB7DAAAQcB7wH3Ae8M7DAAAQcB7wHsAe8M7DAA
        AfEOBwHvMQAEExIAAewBEgHtFwAEEwsAArMDtAUTCgAB7QHqAfcBtQGuAW0B7QHqAewTAAKzA7QFEwYA
        AdQB6wEAARMGrQITBwACtQGuA7UBrgK1AW0HAAHsBwAB6gMAAdQB6wEAARMGrQITBAAB1AGuARMBxwWm
        AacBrQGGARMFAAHsCbUBEwFtAewEAAHsAe8B7AUAAeoBIwFEAgAB1AGuARMBxwWmAacBrQGGARMDAAHa
        AbMEpgEnBKYBrQGGARMDAA21AeoFAAHsAe8B7AMAAesBIwFEAwAB2gGzBKYBJwSmAa0BhgETAgAB2wHU
        AaYDrAECAScBrAHHAaYCiwFmAwAEtQH3BAAEtQGSBgAB7AHvAewBAAHsAUQBSwQAAdsB1AGmA6wBAgEn
        AawBxwGmAosBZgMAAdsBrQKsAQYBAgFIA6wBSAFsAYYBEwIAAfcCtQHsBgACtQHsAW0B7AYAAewB7wH3
        AUsBTAYAAdsBrQKsAQYBAgFIA6wBSAFsAYYBEwIAAawB2wGsAbIBgQFwAdMBrAEGAQIBJwFJAWsBEwEA
        BLUB6wYAA7UB7QESBwAB7AGSAe0HAAGsAdsBrAGyAYEBcAHTAawBBgECAScBSQFrARMCAAGsAdwBugFw
        AYED0wGyAQICSAFrARMBAAO1Ae0BbQYABLUBkgEAAe0B6gMAAewBSwEcAe8B7QYAAawB3AG6AXABgQPT
        AbIBAgJIAWsBEwIAAbIBkAHcAVYBlwG6AdoC0wFOAUgBJwFsARMBAAS1ARMBkgUAArUC7QEAAe8B8QGS
        AgAB7AFLAXQBAAHsAe8D7AMAAbIBkAHcAVYBlwG6AdoC0wFOAUgBJwFsARMCAAGyAU8BlwEZAXgBlwHc
        AdoB0wFwAUgBJwGLARMCAAO1Aa4BEgGSAwAB9wK1AewB6gIAAe8B9ALqASIBSwMAAewB7wPsAgABsgFP
        AZcBGQF4AZcB3AHaAdMBcAFIAScBiwETAwABVQFWAZgBGQH0AcEB2wGBAdMBTgFxARMDAAS1AewBEwES
        AW0B7AS1AZIDAALvAewBEQQAAuwCAAHsAwABVQFWAZgBGQH0AcEB2wGBAdMBTgFxARMEAAGdAZYBmAHC
        Af8BCAFWAbIB0wGyARMBAAGzAgALtQHtAbUFAAHvAfIB7AQAAuwGAAGdAZYBmAHCAf8BCAFWAbIB0wGy
        ARMBAAGzBAACugK7AQgBuwGyAdQBEwIAAbMEAAm1AewHAAPvAewDAALsBgACugK7AQgBuwGyAdQBEwIA
        AbMGAAG6AZ0BugHcAbsBugJtArMEAAa1Ae8CtRkAAboBnQG6AdwBuwG6Am0CswsAA9sBswgAA7UhAAPb
        AbMHAAYTKQAFbQoAAbQBtQEZAvIB8wEZAbUCEyUAAbUB6wGuAbUB7QGuARQBbQgAAbUB8wH/AfEBuwG1
        AQkB8wH0ARkBCQETFgAB7AFtCwABtQHvAfAB8QHwAbwBBwG1Am0GAAG1AfMB/wG0Aq0BuwKtAbUB9AHz
        AbwBExQAAewBtQGuAW0KAAG1AvQB8gHwAbwBBwK1AW0GAAG1Af8DrQG1Af8BtAKtAbQB/wEZARMIAAPs
        CAAB7AHWAQkBzwEUARID6gFtBgABtQL0AfEBBwO1BAABbQFJAbUB/wG0BK0BtAStAQkB9AG8ARMFAAHt
        AW0B7AITAeoB6wYAAewD1gW1ARQBEgPqAwABtQIHAbUCzwGuAgABbQFJAS4BKAG8Af8ErQG0AfMFrQH/
        AQkBEwMAAewB6wHsAfcB6wEVARQBEgETARIB6wQAAewE1gLdAQkB1gS1AeoDAAHVAdQB2wG1Ac8BrgES
        AW0BSQJPAS4BAAG8ARkErQG0Af8BtQStAfQBGQETAQAC7AG8AfcD7AETAesB7AHrAW0CEgHsAgAB7AG1
        AewB6wGuAtYC5QHWAd0BCQHPAewCAAG1AtQC2gHUAYsBEgFPAlYBLgIAAbwB3QWtAbUB/wHVA60B9AHy
        ARMB7AHvAZIB7AH3AQcB8ALsAW0B7AFtAUMB9wHsAW0DAAHsAe0B9wGuAk0BzwJXAc8BtQHsAwABtQPa
        AdMBswG0AlYBUAHrAwABvAH0Bq0BvAH/A60B/wEZARMCkgHvAQcC8gHwAfEB8AEHAZIB6wEUAewB6wHs
        AwAB7AG8AfQB3QLWAtoBtQGvAewDAAK1AtsBiwFsAtwB7QFJAesEAAG8Af8B1QGtAbQB8wG0Aa0BtAH/
        AbQBrQHVAf8BvAETAQcB8AHxAQcB8gHxAfQB/wHzAfEB9AHzAbwC7AIAA5II7AUAAbUBuwLbAlIBUQG0
        AbMBEgYAAbwBGQHVAbQB9AH/AQkB/wH0Aq0B9AHzARMCAAIHAewBbQEHAfQB/wHzAfEB9AG8AgcCAAGS
        A+wB7QGSCwABtQHcAdsBuwFSAlkBHAHbAesGAAG8Af8BGQHVAdYB8gLzAtUBGQH/AbwGAAcHBQABkgHs
        AZIOAAG1AbsB3AHhARkCHAHhAbQBbQcAAbwC/wEZAQkC3AEJAv8BvBQAAZIB7A4AAbUC7wK7AgkB4QG0
        AesIAAK8Bf8CvCYABLUC7wK1CwAFvCwAA7UHAAFCAU0BPgcAAT4DAAEoAwABQAMAATADAAEBAQABAQUA
        AYABARYAA/+BAAGHAf8B/gE/Av8BhwH/AQABPwHwAQcC/wEAAT8BIAEPAeABBwL3ASABDwEAAQcBwAEB
        AuMBAAEHAQABAwGAAQEB8QHHAQABAwEAAQMBgwHBAfgBjwEAAQMBgAEBAYcB4AH8AR8BgAEBAYABAQEH
        AeAB/gE/AYABAQGAAQEBBwHgAZwBHwGAAQEBgAEBAQMB4QEYAYMBgAEBAYABAQGBAcEBgQHBAYABAQHA
        AQMBgAEBAcMBzQHAAQMBwAEFAYABAwHjAc8BwAEFAeABDQHgAQcB8AHnAeABDQH4AQEB4AEPAv8B+AEB
        Af8BwwH8AX8D/wHDAfgBHwT/AfABfwHgAQcE/wHAAT8BwAEDAv8B8wH/AYABHwGAAQEC/wHhAf8BgAEf
        AYABAQH+AT8BwAEPAcABPAIAAfgBDwHAAQAB4AEwAgAB4AEDAcABAAHgAQECAAGAAQABwAEAAcABAwQA
        AeABAQHAAQcEAAHgAQMBgAEPAwABAQGAAQ8BgAEfAYABAQGAAgMB/wGAAR8BgAEDAfACHwH/AYABHwHA
        AQcC/wGfAf8BgAEfAeABDwT/AcABPwH4AT8E/wH8AX8L
</value>
  </data>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>38</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAAAAABoBQAAFgAAACgAAAAQAAAAIAAAAAEACAAAAAAAQAEAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAALy2iAAcC1AAeGHcAJBO6ABoDqQAVAJMAIQ6GAA8BSAAkD1kAYRUJAKBGMABvIQ0AvUUUAOBK
        BwCOSCgA9FkEAKhpBAC/gRMAQzsLAKuXEACbnCoA0N4DAHuZDQCG/wMAV6kdAFLYBgBE4AUAPMgTACpn
        GQBB8CEAHv8NACjPMAAA/xEAEOAjADSXRwAC+TgAC/c/ABqKOgAJ/mEACvhqABm0WwAgsmgAAfiHAAH/
        kAAVkl4AHapxACqPbQAE/7wABOipABzFoAAgpIkABOvSAAL/6wAZxrkAGUE/AA5mZAAC//8AHCkpAAL3
        /wAF0NQAFtfdAA/W4wApmZ8ADM3fABplbgAA2P8AC0pWACeNogAKzPgAKpizAAmRuQAfcJAAAqj9AAml
        +AAoeKMAF3zFACdytwAAefsABoD/ABxargALQ5UABlz/AAFQ9gArU6cAHU3MAB0/tgAbJU4ABSv/AAcn
        7QARKskACxaBAAcI/wD///8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD///8AAAAAGhwZGx0AAAAAAAAAAAAAFxghHh8iAAAAAAAAAAAAExYVICQjJCYAAAAAAAAAABESDxQn
        KikoOgAAAAAAAAwQCw4NLSwvKy4AAAAAAAAAAAAAAAAxMjMwNwAAAAAAAAAAAAAAODU/NDYAAAAAAAAA
        AAAAAAA8PkQ5QQAAAAAAAAAAAAAAQztGQD4AAAAAAAAAAAAAAABHRUtCSAAAAAAAAAAAAAAAAElNTEkA
        AAAAAAAAAAAAAABRT1ROUAAAAAAAAAAAAAAAAFNVVlJXAAAAAAAAAAAAAABbWAFZWgAAAAAAAAAAAAAA
        AAJcBFwDAAAAAAAAAAAAAAAIBQkGB+D////A////gH///4A///8AP////B////wf///+D////g////8H
        ////h////4P////B////wf///+D////g//8=
</value>
  </data>
</root>